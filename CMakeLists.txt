cmake_minimum_required(VERSION 3.21)
project(RAISE-CDT VERSION 0.2.0 LANGUAGES CXX)

include(CTest)
enable_testing()

find_package(PkgConfig REQUIRED)
pkg_check_modules(PQXX REQUIRED libpqxx)
include_directories(${PQXX_INCLUDE_DIRS})

set(COCO_NAME "RAISE-CDT" CACHE STRING "The CoCo Application Name" FORCE)
set(BUILD_MONGODB ON CACHE BOOL "Build MongoDB connection" FORCE)
set(POSTGRES_ACCOUNT "account" CACHE STRING "The Postgres Account" FORCE)
set(POSTGRES_HOST "localhost" CACHE STRING "The Postgres Host" FORCE)
set(POSTGRES_PORT "5432" CACHE STRING "The Postgres Port" FORCE)
set(BUILD_FCM ON CACHE BOOL "Build Firebase Cloud Messaging" FORCE)
set(BUILD_MQTT ON CACHE BOOL "Build MQTT middleware" FORCE)
set(BUILD_COCO_SERVER ON CACHE BOOL "Build the CoCo server" FORCE)
set(ENABLE_CORS ON CACHE BOOL "Enable CORS middleware" FORCE)

message(STATUS "Postgres Host: ${POSTGRES_HOST}")
message(STATUS "Postgres Port: ${POSTGRES_PORT}")

add_executable(raise-cdt src/main.cpp src/raise_cdt.cpp src/raise_cdt_server.cpp src/raise_cdt_db.cpp)
target_compile_features(raise-cdt PUBLIC cxx_std_17)
target_include_directories(raise-cdt PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>)
if(NOT TARGET CoCo)
    add_subdirectory(extern/coco)
endif()
add_dependencies(raise-cdt CoCo)
target_compile_definitions(raise-cdt PUBLIC POSTGRES_ACCOUNT="${POSTGRES_ACCOUNT}" POSTGRES_HOST="${POSTGRES_HOST}" POSTGRES_PORT="${POSTGRES_PORT}")
target_link_libraries(raise-cdt PUBLIC CoCo ${PQXX_LIBRARIES})
setup_sanitizers(raise-cdt)

set(CPACK_PROJECT_NAME json)
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)